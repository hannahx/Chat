/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chat;

import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author Hannah
 */
public class InitView extends JPanel {
    
    public InitView() 
    {
        initComponents();    
        colorChooser.add("Green");
        colorChooser.add("Red");
        colorChooser.add("Blue");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        servPort2 = new javax.swing.JTextField();
        serverChooser = new javax.swing.JRadioButton();
        clientChooser = new javax.swing.JRadioButton();
        servPort = new javax.swing.JTextField();
        servPortField = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        color = new javax.swing.JTextField();
        clPort = new javax.swing.JTextField();
        ip = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        nameField = new javax.swing.JTextField();
        clPortField = new javax.swing.JTextField();
        IPField = new javax.swing.JTextField();
        colorChooser = new java.awt.Choice();
        okButton = new javax.swing.JButton();

        servPort2.setEditable(false);
        servPort2.setText("Port:");

        serverChooser.setText("Server");
        serverChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverChooserActionPerformed(evt);
            }
        });

        clientChooser.setText("Client");
        clientChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientChooserActionPerformed(evt);
            }
        });

        servPort.setEditable(false);
        servPort.setText("Port:");

        servPortField.setText("1111");

        name.setEditable(false);
        name.setText("Name:");

        color.setEditable(false);
        color.setText("Color:");

        clPort.setEditable(false);
        clPort.setText("Port:");

        ip.setEditable(false);
        ip.setText("IP:");

        nameField.setText("Hannah");

        clPortField.setText("1111");

        IPField.setText("local");

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(serverChooser)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(servPort)
                                    .addComponent(clientChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(9, 9, 9)
                                .addComponent(servPortField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ip, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(IPField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(color, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(colorChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(clPort, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(clPortField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(okButton)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(serverChooser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(servPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(servPortField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(clientChooser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(colorChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clPortField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IPField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(okButton)
                .addContainerGap())
        );
    }// </editor-fold>                        

    private void serverChooserActionPerformed(java.awt.event.ActionEvent evt) {                                              
        clientChooser.setSelected(false); //can't chose both server and client
        
        //set other fildes uneditable
        nameField.setEditable(false);
        colorChooser.setEnabled(false);
        clPortField.setEditable(false);
        IPField.setEditable(false);
        
        //set own fields editable
        servPortField.setEditable(true);
    }                                             

    private void clientChooserActionPerformed(java.awt.event.ActionEvent evt) {                                              
        serverChooser.setSelected(false); //can't chose both server and client
        
        //set other fildes uneditable
        servPortField.setEditable(false);
        
        //set own fields editable
        nameField.setEditable(true);
        colorChooser.setEnabled(true);
        clPortField.setEditable(true);
        IPField.setEditable(true);
    }                                             

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
        
        if(serverChooser.isSelected()) {
            //Server selected: start server (in new thread)
            ServerStarter ss = new ServerStarter();
            ss.start();
        }
        else if (clientChooser.isSelected()) {
            //Client selected: create "profile"
            String c = colorChooser.getSelectedItem();
            String col = "";
            if(c.equals("Green")) {
                col = "#00FF00";
            } else if(c.equals("Blue")) {
                col = "#0000FF";
            } else if(c.equals("Red")) {
                col = "#FF0000";
            }
            
            String n = nameField.getText();
            int p = Integer.parseInt(clPortField.getText());
            String ip = IPField.getText();
            
            JFrame frame  = new JFrame("Chat [" + n + "]");
            int id = (int)(Math.random()*10000);
            Profile profile = new Profile(n, col, p, ip, frame, null, id); //TODO: blir garanterat fel med model.generateID()
            //Annars: generera random nummer mellan 1-10000: liten chans att fler får samma...?
            //TODO: check if id already exists
            ClientView cv = new ClientView(profile);
            
            //Open chat window
            frame.add(cv);
            frame.add(cv);
            frame.pack();
            frame.setVisible(true);
            
            //Open choose window
//            ChooseChat cc = new ChooseChat(cv, frame, profile);
//            frame.add(cc);
//            frame.add(cc);
//            frame.pack();
//            frame.setVisible(true);
        }
        else
        {
            System.out.println("Choose Server or Client!");
        }
    }                                        


    // Variables declaration - do not modify                     
    private javax.swing.JTextField IPField;
    private javax.swing.JTextField clPort;
    private javax.swing.JTextField clPortField;
    private javax.swing.JRadioButton clientChooser;
    private javax.swing.JTextField color;
    private java.awt.Choice colorChooser;
    private javax.swing.JTextField ip;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField name;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField servPort;
    private javax.swing.JTextField servPort2;
    private javax.swing.JTextField servPortField;
    private javax.swing.JRadioButton serverChooser;
    // End of variables declaration                   

    /**
     * Starts a Server in a new thread.
     */
    class ServerStarter extends Thread {
       public void run () {
            int port = Integer.parseInt(servPortField.getText());
            ChatModel model = new ChatModel();
            Server s = new Server(port, model);
       }

    }
}
